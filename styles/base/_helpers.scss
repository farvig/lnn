.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  max-width: $max-page-width;
  position: relative;

  @include media(portable) {
    padding-left: $spacing;
    padding-right: $spacing;
  }
}

.right {
  float: right;
}

.left {
  float: left;
}

.bottom{
  position: absolute;
  bottom: 0;
}

.flex-center {
  align-items: center;
  display: flex;
  justify-content: center;
}

// Spacing
//
// Spacers are used to positioning specific elements. Usually it can be modules
// or elements that just need a litle nudge in a specific direction and a whole module
// modifier class is overkill for it.
//
// Markup:
// <div class="{$modifiers}">{$modifiers}</div>
//
// .flush       - Clear the bottom margin.
// .slim        - Half spacer unit for the button `$spacing / 2`
// .landmark    - Usefull for hero elements. Gives element a double bototm margin.
// .row         - Turns element into a block element and gives it a bottom margin.

.flush {
  margin-bottom: 0 !important;
}

.slim {
  margin-bottom: $spacing/2 !important;
}

.spacing{
  margin-bottom: $spacing !important;
}

.row {
  @extend %clearfix;
  margin-bottom: $spacing;
  width: 100%;
}

.landmark {
  margin-bottom: $spacing*2 !important;
}

// Text Helpers
//
// Various helpers for text element
//
// Markup:
// <div class="{$modifiers}">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum nibh nisl, mollis eu pretium ac, porta in nulla. Nam id quam a eros dignissim mollis. Aliquam sed sodales elit. Vivamus venenatis diam quis velit tincidunt, in dapibus nisi rutrum. Etiam consequat, nulla ut dictum rhoncus, justo mauris vestibulum elit, et auctor mauris magna eu sem. Aenean a sapien dolor. Phasellus odio enim, gravida a eleifend non, hendrerit a neque. Donec gravida, diam eu congue viverra, metus nisl porttitor felis, id consequat est nulla a purus. Donec a felis libero. Pellentesque sit amet ultrices odio, commodo pulvinar tortor. Curabitur urna nisi, luctus eu tristique in, lobortis ac neque.</div>
//
// .align-right       - Align text right
// .align-center      - Align text center
// .align-left        - Align text left
// .caps              - All CAPS text
// .capitalize        - Capitalize text
// .muted             - Muted text
// .bold              - Makes text bold weight
// .normal            - Makes text normal weight
// .light             - Makes text light weight

@each $pos in right, center, left {
  .align-#{$pos} {
    text-align: #{$pos};
  }
}

.caps {
  text-transform: uppercase;
}

.capitalize {
  text-transform: capitalize;
}

.muted {
  filter: alpha(opacity = 50) !important;
  opacity: .5 !important;
}

.bold {
  font-weight: bold;
}

.normal {
  font-weight: normal;
}

.light {
  font-weight: light;
}

// Misc. Helpers
//
// The `dummy` class is only for presentational purposes.
//
// Markup:
// <div class="{$modifiers} dummy">{$modifiers}</div>
//
// .divider         - Divider class. Adds a border to the bottom of the element
// .square          - Makes the element behave a like a square image and retains its dimensions
// .rectangle       - Makes the element behave a like a rectangle image and retains its dimensions
// .cursor          - Change curser to pointer
//

.divider {
  border: 0;
  border-bottom: 1px dotted $color-border-light;
  padding-bottom: $spacing;
  margin-bottom: $spacing;
}

.square {
  height: 0;
  padding-bottom: 100%;
}

.rectangle {
  height: 0;
  padding-bottom: 48%;
  padding-bottom: calc(50% - #{22px/2});
}

.cursor {
  cursor: pointer;
}

// Videos
//
// Use the `embed-container` class around embedded videos to get a responsive block.
//
// Markup:
// <div class="embed-container">
//   <iframe src="http://www.youtube.com/embed/J8wKORctsus"></iframe>
// </div>
//
// Styleguide 2.5

.embed-container {
  height: 0;
  height: auto;
  margin-bottom: $spacing;
  max-width: 100%;
  overflow: hidden;
  padding-bottom: 56.25%;
  position: relative;

  iframe,
  object,
  embed {
    border: 0;
    height: 100%;
    left: 0;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

%layer-bottom {
  z-index: 100;
}

%layer-middle {
  z-index: 500;
}

%layer-top {
  z-index: 1000;
}

.dummy {
  background-color: darken($color-body, 10%);
  width: 200px;
  text-align: center;

  &.square,
  &.rectangle {
    width: auto;
  }
}

@mixin truncate {
  width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

%truncate {
  @include truncate;
}

.clear-container {
  @extend %clearfix;
  display: block;
  position: relative;

  @include media(lap) {
    margin-left: -$spacing;
    margin-right: -$spacing;
  }

  @include media(palm) {
    margin-left: -$spacing/2;
    margin-right: -$spacing/2;
  }
}

.block {
  display: block;
}

/*
 * Hide visually and from screen readers:
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}


.btn{
  background:rgba(255,255,255,.6);
  border:1px solid $color-primary;
  border-radius:4px;
  clear:both;
  display: inline-block;
  float: none;
  padding:.4em 1.5em;
  &:hover{
    background:rgba(2,124,216,.1);
    border-color:darken($color-primary, 5%);
    color:darken($color-primary, 5%);
  }
}

.cta{
  background-color: $color-primary;
  color:#fff;
  &:hover{
    background-color: darken($color-primary, 5%);
    color:#fff;
  }
}

.btn--section{
  font-size:$font-size-large;
  margin-top: 2em;
  padding-left: 3em;
  padding-right: 3em;
  @include media(portable){
    font-size: $font-size-large;
    padding-left: 1em;
    padding-right: 1em;
  }
}


/*
 * WP specific styles
 */

.alignleft{
  float: left;
  margin:0 $spacing/2 $spacing/2 0;
}
.alignright{
  float: right;
  margin:0 0 $spacing/2 $spacing/2;
}
